{"version":3,"sources":["../../../tmp/1l3a6u4e6/speedy-links/src/speedy-links.ts"],"sourcesContent":["export interface ActivateLinksOptions {\n  mapLinkUrlToModuleUrl: (url: string) => string | Promise<string>;\n  linkSelector?: string;\n  moduleExecutor?: (module: any) => Promise<void>;\n}\n\nlet hasBeenSetup = false;\nlet opts: ActivateLinksOptions;\nlet linkSelector: string;\nconst modulesCache = {};\n\nexport function setupSpeedyLinks(options: ActivateLinksOptions): void {\n  if (hasBeenSetup) {\n    return;\n  }\n  hasBeenSetup = true;\n  opts = options;\n  linkSelector = opts.linkSelector ? opts.linkSelector : 'a';\n  document.body.addEventListener('click', onClick);\n  window.addEventListener('popstate', onPopState);\n}\n\nasync function onClick(event: MouseEvent): Promise<void> {\n  const link = event\n    .composedPath()\n    .find(\n      (e) => e instanceof HTMLElement && e.matches(linkSelector)\n    ) as HTMLAnchorElement;\n  if (link && link.href) {\n    const url = link.href;\n    const hash = new URL(url).hash;\n\n    if (isDifferentOriginUrl(url)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (isSamePageUrl(url)) {\n      if (url !== location.href) {\n        pushNewUrlToHistory(url);\n      }\n      tryScrollToHashOrResetScroll(hash);\n    } else {\n      pushNewUrlToHistory(url);\n      await renderPage(url);\n      tryScrollToHashOrResetScroll(hash);\n    }\n  }\n}\n\nasync function onPopState(): Promise<void> {\n  await renderPage(location.href);\n}\n\nfunction isDifferentOriginUrl(url: string): boolean {\n  return new URL(url).origin !== location.origin;\n}\n\nfunction isSamePageUrl(url: string): boolean {\n  return removeHash(url) === removeHash(location.href);\n}\n\nfunction pushNewUrlToHistory(url: string): void {\n  history.pushState({}, document.title, url);\n}\n\nfunction tryScrollToHashOrResetScroll(hash?: string): void {\n  let hashEl;\n  if (hash) {\n    try {\n      hashEl = document.querySelector(hash);\n    } catch {}\n  }\n  if (hashEl) {\n    hashEl.scrollIntoView();\n  } else {\n    window.scrollTo(0, 0);\n  }\n}\n\nasync function renderPage(url: string): Promise<void> {\n  const urlWithoutHash = removeHash(url);\n  let module = modulesCache[urlWithoutHash];\n  if (!module) {\n    const moduleUrl = await opts.mapLinkUrlToModuleUrl(urlWithoutHash);\n    module = await import(moduleUrl);\n    modulesCache[urlWithoutHash] = module;\n  }\n  try {\n    if (opts.moduleExecutor) {\n      await opts.moduleExecutor(module);\n    } else {\n      const render = module.default as () => Promise<void>;\n      await render();\n    }\n  } catch (e) {\n    location.href = url;\n  }\n}\n\nfunction removeHash(url: string): string {\n  return url.split('#')[0];\n}\n"],"names":[],"mappings":"AAMA,IAAI,eAAe;AACnB,IAAI;AACJ,IAAI;AACJ,MAAM,eAAe;AAEd,0BAA0B,SAAqC;AACpE,MAAI,cAAc;AAChB;AAAA;AAEa,iBAAA;AACR,SAAA;AACQ,iBAAA,KAAK,eAAe,KAAK,eAAe;AAC9C,WAAA,KAAK,iBAAiB,SAAS;AACxC,SAAO,iBAAiB,YAAY;AAAA;AAGtC,uBAAuB,OAAkC;AACjD,QAAA,OAAO,MACV,eACA,KACC,CAAC,MAAM,aAAa,eAAe,EAAE,QAAQ;AAE7C,MAAA,QAAQ,KAAK,MAAM;AACrB,UAAM,MAAM,KAAK;AACX,UAAA,OAAO,IAAI,IAAI,KAAK;AAE1B,QAAI,qBAAqB,MAAM;AAC7B;AAAA;AAGI,UAAA;AAEN,QAAI,cAAc,MAAM;AAClB,UAAA,QAAQ,SAAS,MAAM;AACL,4BAAA;AAAA;AAEO,mCAAA;AAAA,WACxB;AACe,0BAAA;AACpB,YAAM,WAAW;AACY,mCAAA;AAAA;AAAA;AAAA;AAKnC,4BAA2C;AACzC,QAAM,WAAW,SAAS;AAAA;AAG5B,8BAA8B,KAAsB;AAClD,SAAO,IAAI,IAAI,KAAK,WAAW,SAAS;AAAA;AAG1C,uBAAuB,KAAsB;AACpC,SAAA,WAAW,SAAS,WAAW,SAAS;AAAA;AAGjD,6BAA6B,KAAmB;AACtC,UAAA,UAAU,IAAI,SAAS,OAAO;AAAA;AAGxC,sCAAsC,MAAqB;AACrD,MAAA;AACJ,MAAI,MAAM;AACJ,QAAA;AACF,eAAS,SAAS,cAAc;AAAA,YAChC;AAAA;AAAA;AAEJ,MAAI,QAAQ;AACH,WAAA;AAAA,SACF;AACL,WAAO,SAAS,GAAG;AAAA;AAAA;AAIvB,0BAA0B,KAA4B;AACpD,QAAM,iBAAiB,WAAW;AAClC,MAAI,SAAS,aAAa;AAC1B,MAAI,CAAC,QAAQ;AACL,UAAA,YAAY,MAAM,KAAK,sBAAsB;AACnD,aAAS,MAAM,OAAO;AACtB,iBAAa,kBAAkB;AAAA;AAE7B,MAAA;AACF,QAAI,KAAK,gBAAgB;AACvB,YAAM,KAAK,eAAe;AAAA,WACrB;AACL,YAAM,SAAS,OAAO;AAChB,YAAA;AAAA;AAAA,WAED,GAFC;AAGR,aAAS,OAAO;AAAA;AAAA;AAIpB,oBAAoB,KAAqB;AAChC,SAAA,IAAI,MAAM,KAAK;AAAA;;","sourceRoot":"/source_map/"}