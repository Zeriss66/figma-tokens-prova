{"version":3,"sources":["../../../tmp/1l3a6u4e6/clipboard/src/Clipboard.ts"],"sourcesContent":["import copyTextToClipboard from 'copy-to-clipboard';\nimport clipboardStyles from './Clipboard.css';\n\nexport class Clipboard extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n  }\n\n  copy() {\n    const text = this.shadowRoot\n      .querySelector('slot')\n      .assignedNodes()[0]?.textContent;\n    copyTextToClipboard(text);\n\n    const tooltip = this.shadowRoot.querySelector(`.tooltip`);\n    tooltip.textContent = 'Copied';\n    setTimeout(() => (tooltip.textContent = 'Copy'), 2000);\n  }\n\n  connectedCallback() {\n    this.onclick = this.copy;\n\n    const width = this.getAttribute('width');\n    const widthStyle = width ? `style=\"width:${width};\"` : '';\n\n    this.shadowRoot.innerHTML = /*html*/ `\n      <style>${clipboardStyles}</style>\n      <div class=\"wrapper\" ${widthStyle}>\n        <div class=\"slotContainer\">\n          <slot></slot>\n        </div>\n        <div class=\"tooltip\">Copy</div>\n      </div>\n    `;\n  }\n}\n"],"names":[],"mappings":";;AAGO,wBAAwB,YAAY;AAAA,EACzC,cAAc;AACZ;AACK,SAAA,aAAa,EAAE,MAAM;AAAA;AAAA,EAG5B,OAAO;;AACL,UAAM,OAAO,WAAK,WACf,cAAc,QACd,gBAAgB,OAFN,mBAEU;AACH,wBAAA;AAEd,UAAA,UAAU,KAAK,WAAW,cAAc;AAC9C,YAAQ,cAAc;AACX,eAAA,MAAO,QAAQ,cAAc,QAAS;AAAA;AAAA,EAGnD,oBAAoB;AAClB,SAAK,UAAU,KAAK;AAEd,UAAA,QAAQ,KAAK,aAAa;AAC1B,UAAA,aAAa,QAAQ,gBAAgB,YAAY;AAEvD,SAAK,WAAW,YAAqB;AAAA,eAC1B;AAAA,6BACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;","sourceRoot":"/source_map/"}