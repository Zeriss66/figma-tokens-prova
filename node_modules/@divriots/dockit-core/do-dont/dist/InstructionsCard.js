import { LitElement, html } from "lit";
import { property } from "lit/decorators.js";
import { InstructionsCardStyles } from "./InstructionsCard.styles.js";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
class InstructionsCard extends LitElement {
  constructor() {
    super(...arguments);
    this.icon = "";
  }
  render() {
    return html`
      <div part="container">
        <div part="component-container">
          <slot name="component"></slot>
        </div>
        <div part="instructions-container">
          <div class="background"></div>
          <div class="title-container">
            <slot name="icon">${this.icon}</slot>
            <span class="title">${this.label}</span>
          </div>
          <slot name="instructions"></slot>
        </div>
      </div>
    `;
  }
}
InstructionsCard.styles = InstructionsCardStyles;
__decorateClass([
  property()
], InstructionsCard.prototype, "label", 2);
export { InstructionsCard };
