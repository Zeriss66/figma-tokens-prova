import { LitElement, html } from "lit";
import { property } from "lit/decorators.js";
import { NoteStyles, colors } from "./Note.styles.js";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
class Note extends LitElement {
  render() {
    return html`<style>
        :host {
          --dockit-note-color: ${colors[this.variant] || colors.info};
        }
      </style>
      <div part="container">
        <slot></slot>
      </div>`;
  }
}
Note.styles = NoteStyles;
__decorateClass([
  property()
], Note.prototype, "variant", 2);
export { Note };
