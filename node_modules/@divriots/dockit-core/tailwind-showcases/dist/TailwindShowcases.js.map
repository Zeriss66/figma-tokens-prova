{"version":3,"sources":["../../../tmp/1l3a6u4e6/tailwind-showcases/src/TailwindShowcases.ts"],"sourcesContent":["import '~/showcases/dockit-showcases.define.js';\nimport '~/clipboard/dockit-clipboard.define.js';\nimport { extractClassSuffixes } from './theme-helpers';\nimport { getZIndexHtml } from './z-index-helper';\nimport { getScaleHtml } from './space-helper';\nimport resolveConfig from 'tailwindcss/resolveConfig';\nimport { TailwindTheme } from 'tailwindcss/tailwind-config';\n\nconst getClassSuffixes = (theme) => ({\n  colors: extractClassSuffixes('colors', theme),\n  opacity: extractClassSuffixes('opacity', theme),\n  boxShadow: extractClassSuffixes('boxShadow', theme),\n  borderRadius: extractClassSuffixes('borderRadius', theme),\n  borderWidth: extractClassSuffixes('borderWidth', theme),\n  fontFamily: extractClassSuffixes('fontFamily', theme),\n  fontSize: extractClassSuffixes('fontSize', theme),\n  fontWeight: extractClassSuffixes('fontWeight', theme),\n  letterSpacing: extractClassSuffixes('letterSpacing', theme),\n  lineHeight: extractClassSuffixes('lineHeight', theme),\n});\n\nconst getClassNames = (suffixes) => ({\n  backgroundColor: {\n    componentType: 'box',\n    classes: suffixes.colors.map((s) => `bg${s}`),\n    requiresCheckeredBackground: true,\n  },\n  opacity: {\n    componentType: 'box',\n    classes: suffixes.opacity.map((s) => `opacity${s}`),\n    requiresCheckeredBackground: true,\n  },\n  shadow: {\n    componentType: 'box',\n    classes: suffixes.boxShadow.map((s) => `shadow${s}`),\n  },\n  borderRadius: {\n    componentType: 'box',\n    classes: suffixes.borderRadius.map((s) => `rounded${s}`),\n  },\n  borderWidth: {\n    componentType: 'box',\n    classes: suffixes.borderWidth.map((s) => `border${s}`),\n  },\n  borderColor: {\n    componentType: 'box',\n    classes: suffixes.colors.map((s) => `border${s}`),\n  },\n  fontFamily: {\n    componentType: 'text',\n    classes: suffixes.fontFamily.map((s) => `font${s}`),\n  },\n  fontSize: {\n    componentType: 'text',\n    classes: suffixes.fontSize.map((s) => `text${s}`),\n  },\n  fontWeight: {\n    componentType: 'text',\n    classes: suffixes.fontWeight.map((s) => `font${s}`),\n  },\n  textColor: {\n    componentType: 'text',\n    classes: suffixes.colors.map((s) => `text${s}`),\n  },\n  letterSpacing: {\n    componentType: 'text',\n    classes: suffixes.letterSpacing.map((s) => `tracking${s}`),\n  },\n  lineHeight: {\n    componentType: 'text',\n    classes: suffixes.lineHeight.map((s) => `leading${s}`),\n    requiresLongText: true,\n  },\n});\n\nexport class TailwindShowcases extends HTMLElement {\n  theme: TailwindTheme;\n\n  constructor() {\n    super();\n    this.theme = {};\n  }\n\n  connectedCallback() {\n    const partialTheme = this.theme;\n    const { theme } = resolveConfig({ theme: partialTheme });\n\n    const showcaseKey = this.getAttribute('showcase-key');\n    if (showcaseKey === 'zIndex') {\n      this.innerHTML = getZIndexHtml(theme);\n      return;\n    }\n\n    if (showcaseKey === 'space') {\n      this.innerHTML = getScaleHtml(theme.spacing);\n      return;\n    }\n\n    const classSuffixes = getClassSuffixes(theme);\n    const classNames = getClassNames(classSuffixes);\n\n    const supportedKeys = Object.keys(classNames);\n\n    if (!supportedKeys.includes(showcaseKey)) {\n      this.innerHTML =\n        this.innerHTML +\n        /*html*/ `<p style=\"color:red;\">Other keys than ${supportedKeys.join(\n          ', '\n        )} are not yet supported</p>`;\n      return;\n    }\n\n    const {\n      classes,\n      componentType,\n      requiresLongText,\n      requiresCheckeredBackground,\n    } = classNames[showcaseKey];\n\n    const componentClass = this.getAttribute('component-class');\n\n    this.innerHTML =\n      this.innerHTML +\n      /*html*/\n      `<dockit-showcases\n          component-class=\"${componentClass}\"\n          showcase-classes=\"${classes.join(' ')}\"\n          component-type=\"${componentType}\"\n          ${requiresLongText ? 'long-text' : ''}\n          ${requiresCheckeredBackground ? 'checkered-background' : ''}\n      ></dockit-showcases>`;\n  }\n}\n"],"names":[],"mappings":"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","sourceRoot":"/source_map/"}