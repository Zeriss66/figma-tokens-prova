{"version":3,"file":"markdown.js","sourceRoot":"","sources":["../../src/utils/markdown.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAkB,MAAM,KAAK,CAAC;AACpD,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAC3D,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,SAAS,MAAM,WAAW,CAAC;AAElC,MAAM,CAAC,UAAU,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AAExC,MAAM,CAAC,MAAM,KAAK,GAAG,CAAC,QAAiB,EAAkB,EAAE,CACzD,IAAI,CAAA;MACA,CAAC,QAAQ;IACT,CAAC,CAAC,OAAO;IACT,CAAC,CAAC,UAAU,CACR,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAC1C,8EAA8E,EAC9E,qBAAqB,CACtB,CACF;GACN,CAAC","sourcesContent":["import { html, nothing, TemplateResult } from 'lit';\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js';\nimport { marked } from 'marked';\nimport DOMPurify from 'dompurify';\n\nmarked.setOptions({ headerIds: false });\n\nexport const parse = (markdown?: string): TemplateResult =>\n  html`\n    ${!markdown\n      ? nothing\n      : unsafeHTML(\n          DOMPurify.sanitize(marked(markdown)).replace(\n            /<(h[1-6]|a|p|ul|ol|li|pre|code|strong|em|blockquote|del)(\\s+href=\"[^\"]+\")*>/g,\n            '<$1 part=\"md-$1\"$2>'\n          )\n        )}\n  `;\n"]}