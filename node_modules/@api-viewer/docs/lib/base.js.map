{"version":3,"file":"base.js","sourceRoot":"","sources":["../src/base.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAkB,MAAM,KAAK,CAAC;AACvD,OAAO,EAAE,KAAK,EAAE,MAAM,yBAAyB,CAAC;AAChD,OAAO,EAEL,gBAAgB,EAChB,iBAAiB,EACjB,cAAc,EACd,eAAe,EACf,gBAAgB,EAChB,iBAAiB,EACjB,aAAa,EAEd,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,aAAa,CAAC;AAErB,KAAK,UAAU,UAAU,CACvB,WAAoC,EACpC,QAAkC,EAClC,IAAe,EACf,QAAiB;IAEjB,MAAM,QAAQ,GAAG,MAAM,WAAW,CAAC;IAEnC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE;QAChC,OAAO,gBAAgB,CAAC;KACzB;IAED,MAAM,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAEnD,MAAM,IAAI,GAAG,cAAc,CAAC,QAAQ,EAAE,QAAQ,CAAkB,CAAC;IACjE,MAAM,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5C,MAAM,OAAO,GAAG,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAE/C,OAAO,IAAI,CAAA;;qCAEwB,IAAI,CAAC,IAAI;;;;sBAIxB,QAAQ;qBACT,QAAQ,IAAI,EAAE;sBACb,QAAQ,CAAC,MAAM,KAAK,CAAC;;;cAG7B,QAAQ,CAAC,GAAG,CACZ,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAA,iBAAiB,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,WAAW,CAC9D;;;;;mBAKM,IAAI,CAAC,WAAW,KAAK,EAAE;QAClC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;;;cAGjB,IAAI,CAAC,IAAI;eACR,KAAK;eACL,IAAI,CAAC,UAAU,IAAI,EAAE;iBACnB,OAAO;gBACR,IAAI,CAAC,MAAM,IAAI,EAAE;eAClB,IAAI,CAAC,KAAK,IAAI,EAAE;kBACb,IAAI,CAAC,QAAQ,IAAI,EAAE;kBACnB,IAAI,CAAC,aAAa,IAAI,EAAE;;;GAGvC,CAAC;AACJ,CAAC;AAED,MAAM,OAAO,WAAY,SAAQ,aAAa,CAAC,UAAU,CAAC;IAC9C,MAAM;QACd,OAAO,IAAI,CAAA,GAAG,KAAK,CACjB,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CACvE,EAAE,CAAC;IACN,CAAC;IAEO,SAAS,CAAC,CAAQ;QACxB,IAAI,CAAC,QAAQ,GAAI,CAAC,CAAC,MAA4B,CAAC,KAAK,CAAC;IACxD,CAAC;CACF","sourcesContent":["import { LitElement, html, TemplateResult } from 'lit';\nimport { until } from 'lit/directives/until.js';\nimport {\n  CustomElement,\n  emptyDataWarning,\n  getCustomElements,\n  getElementData,\n  getPublicFields,\n  getPublicMethods,\n  hasCustomElements,\n  ManifestMixin,\n  Package\n} from '@api-viewer/common/lib/index.js';\nimport { parse } from './utils/markdown.js';\nimport './layout.js';\n\nasync function renderDocs(\n  jsonFetched: Promise<Package | null>,\n  onSelect: (e: CustomEvent) => void,\n  only?: string[],\n  selected?: string\n): Promise<TemplateResult> {\n  const manifest = await jsonFetched;\n\n  if (!hasCustomElements(manifest)) {\n    return emptyDataWarning;\n  }\n\n  const elements = getCustomElements(manifest, only);\n\n  const data = getElementData(manifest, selected) as CustomElement;\n  const props = getPublicFields(data.members);\n  const methods = getPublicMethods(data.members);\n\n  return html`\n    <header part=\"header\">\n      <div part=\"header-title\">&lt;${data.name}&gt;</div>\n      <nav>\n        <label part=\"select-label\">\n          <select\n            @change=${onSelect}\n            .value=${selected || ''}\n            ?hidden=${elements.length === 1}\n            part=\"select\"\n          >\n            ${elements.map(\n              (tag) => html`<option value=${tag.name}>${tag.name}</option>`\n            )}\n          </select>\n        </label>\n      </nav>\n    </header>\n    <div ?hidden=${data.description === ''} part=\"docs-description\">\n      ${parse(data.description)}\n    </div>\n    <api-docs-layout\n      .name=${data.name}\n      .props=${props}\n      .attrs=${data.attributes ?? []}\n      .methods=${methods}\n      .events=${data.events ?? []}\n      .slots=${data.slots ?? []}\n      .cssParts=${data.cssParts ?? []}\n      .cssProps=${data.cssProperties ?? []}\n      part=\"docs-container\"\n    ></api-docs-layout>\n  `;\n}\n\nexport class ApiDocsBase extends ManifestMixin(LitElement) {\n  protected render(): TemplateResult {\n    return html`${until(\n      renderDocs(this.jsonFetched, this._onSelect, this.only, this.selected)\n    )}`;\n  }\n\n  private _onSelect(e: Event): void {\n    this.selected = (e.target as HTMLSelectElement).value;\n  }\n}\n"]}